#Combine different graphs together
> library(ggplot2)
> p1 <- ggplot(mydataframe2, aes(x= '4OHTam')) + geom_histogram()
> p2 <- ggplot(mydataframe2, aes(x= 'a-OH Tam')) + geom_histogram()
> p3 <- ggplot(mydataframe2, aes(x= 'Endoxifen')) + geom_histogram()
> library(gridExtra)
> grid.arrange(p1, p2, p3, nrow=3)

#To add bell shape curve to histogram
> p1 <- ggplot(mydataframe, aes(x = Endo)) + geom_histogram(aes(y=..density..), fill="light gray", col="black", size = 1) + stat_function(fun = dnorm, args = list(mean = mean(mydataframe$Endo), sd = sd(mydataframe$Endo)), col = "#1b98e0", size = 2)
> p2 <- ggplot(mydataframe2, aes(x = `4OHTam`)) + geom_histogram(aes(y=..density..), fill="light gray", col="black", size = 1) + stat_function(fun = dnorm, args = list(mean = mean(mydataframe2$`4OHTam`), sd = sd(mydataframe2$`4OHTam`)), col = "#1b98e0", size = 2)
> library(gridExtra)
> grid.arrange(p1, p2, nrow=2)

#To add gradient color scheme to the histogram
> ggplot(mydataframe, aes(x=Endo)) + geom_histogram(aes(fill=..count..)) + scale_x_continuous(name="Endoxifen concentration", breaks=seq(0, 80, 10), limits=c(0, 80)) + scale_y_continuous(name="Count") + ggtitle("Frequency histogram of Endoxifen Concentration") + scale_fill_gradient("Count", low="light green", high="light blue")

#To generate boxplot
> ggplot(mydataframe2, aes(x=Phenotype, y=Endoxifen)) + geom_boxplot(fill="cornflowerblue", color="black", size=1, alpha=.5, width=.5) + geom_point(color="darkblue", alpha=.3, size=3)

#To generate survival curve
> library(survival)
> summary(mydataframeS) 
> mydataframeS$Gender <- as.factor(mydataframeS$Gender) #Gender is factor variable
> str(mydataframeS)
> Surv(time = mydataframeS$Time, event = mydataframeS$Event == 1) #Survival times until event
> summary(Surv(time = mydataframeS$Time, event = mydataframeS$Event == 1)) 
> Y = Surv(mydataframeS$Time, mydataframeS$Event == 1) 
> kmfit = survfit(Y ~ mydataframeS$Gender) 
> summary(kmfit, times = c(seq(0,220, by = 50))) 
>  par(mar=c(1,1,1,1)) 
> par(pin=c(4,3), mai=c(1,1,1,3))
> plot(kmfit, lty = c("solid", "dashed"), col = c("black", "grey"), xlab = "Survival Time", ylab = "Survival Probabilities")
> legend("topright", c("Female", "Male"), lty = c("solid", "dashed"), col = c("black", "grey")) 


#Log-Rank test comparing survival curves: survdiff()
> survdiff(formula = Surv(mydataframeS$Time, mydataframeS$Event) ~ Gender, data = mydataframeS)


#Plotting Survival curves using ggplot2 and ggfortify libraries
> library(ggplot2)
> library(ggfortify) 
> model_fit <- survfit(Surv(mydataframeS$Time, mydataframeS$Event) ~ mydataframeS$Gender, data = mydataframeS) 
>autoplot(model_fit) + 
 labs(x = "\n Survival Time (Days) ", y = "Survival Probabilities \n", 
 title = "Survival Times Of \n Gastric Cancer Patients \n") + 
 theme(plot.title = element_text(hjust = 0.5), 
 axis.title.x = element_text(face="bold", colour="#FF7A33", size = 12),
 axis.title.y = element_text(face="bold", colour="#FF7A33", size = 12),
 legend.title = element_text(face="bold", size = 10))

#Plotting Survival curves using ggplot2, survminer and ggsurvplot libraries
> library(ggplot2)
> library(survminer)
> model_fit <- survfit(Surv(mydataframeS$Time, mydataframeS$Event) ~ mydataframeS$Gender, data = mydataframeS) 
> ggsurvplot(model_fit)
